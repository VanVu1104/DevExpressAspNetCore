@model List<DevExtremeAspNetCore.ViewModels.ImageUploadViewModel>

@{
    ViewData["Title"] = "Upload Images";
}

<style>
    /* ----- General Styling ----- */
    body {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
        background-color: #f4f7f6;
        color: #333;
        line-height: 1.6;
    }

    .upload-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 2rem;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.05);
    }

    h2 {
        text-align: center;
        margin-bottom: 2rem;
        color: #2c3e50;
    }

    /* ----- Action Buttons Styling ----- */
    .action-buttons {
        display: flex;
        justify-content: center;
        gap: 1rem;
        margin-bottom: 2rem;
        flex-wrap: wrap;
    }

    .btn {
        padding: 12px 24px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 16px;
        font-weight: 500;
        transition: all 0.2s ease-in-out;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
    }

    /* ----- Image Grid Styling ----- */
    #imageInputs {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 1.5rem;
    }

    /* ----- Image Item (Card) Styling ----- */
    .image-item {
        background-color: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        padding: 1rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s, box-shadow 0.2s;
        display: flex;
        flex-direction: column;
        position: relative;
    }

        .image-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

    .image-preview-container {
        width: 100%;
        height: 180px;
        border: 2px dashed #ccc;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        overflow: hidden;
        margin-bottom: 1rem;
        background-color: #f8f9fa;
        position: relative; 
    }

    .preview-placeholder {
        text-align: center;
        color: #888;
    }

        .preview-placeholder svg {
            width: 40px;
            height: 40px;
            margin-bottom: 0.5rem;
        }

    .image-preview {
        display: none; 
        width: 100%;
        height: 100%;
        object-fit: cover; 
        position: absolute;
        top: 0;
        left: 0;
    }

    .form-input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 6px;
        font-size: 14px;
        box-sizing: border-box; 
    }

    .btn-remove {
        position: absolute;
        top: 10px;
        right: 10px;
        width: 28px;
        height: 28px;
        border-radius: 50%;
        background-color: rgba(255, 0, 0, 0.7);
        color: white;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        font-weight: bold;
        line-height: 1;
        opacity: 0;
        transition: opacity 0.2s;
        z-index: 10;
    }

    .image-item:hover .btn-remove {
        opacity: 1;
    }

    /* ----- Camera View Styling ----- */
    #cameraContainer {
        margin-top: 1.5rem;
        padding: 1.5rem;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        text-align: center;
        background-color: #f8f9fa;
    }

    #camera {
        border-radius: 8px;
        max-width: 100%;
    }

    .camera-controls {
        margin-top: 1rem;
        display: flex;
        justify-content: center;
        gap: 1rem;
    }

    /* ----- Popup Styling ----- */
    .popup {
        display: none;
        position: fixed;
        z-index: 9999;
        padding-top: 60px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.9);
        text-align: center;
    }

    .popup-content {
        margin: auto;
        display: block;
        max-width: 85%;
        max-height: 85%;
    }

    .close {
        position: absolute;
        top: 20px;
        right: 40px;
        color: #fff;
        font-size: 40px;
        font-weight: bold;
        cursor: pointer;
        transition: 0.3s;
    }

        .close:hover {
            color: #bbb;
        }

    /* ----- Result list (Updated)----- */
    .result-list {
        list-style: none;
        padding: 0;
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
    }

        .result-list li {
            aspect-ratio: 1 / 1;
            border-radius: 10px;
            overflow: hidden; 
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
            transition: transform 0.2s ease-in-out;
        }

            .result-list li:hover {
                transform: scale(1.05);
            }

        .result-list img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
        }

</style>

<div class="upload-container">
    <h2>Upload nhiều hình ảnh kèm nội dung</h2>

    <form asp-action="Upload" asp-controller="Image" method="post" enctype="multipart/form-data">

        <div class="action-buttons">
            <button type="button" class="btn btn-secondary" onclick="addMore()">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16"><path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" /><path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" /></svg>
                Thêm ảnh
            </button>
            <button type="button" class="btn btn-secondary" onclick="openCamera()">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-camera-fill" viewBox="0 0 16 16"><path d="M10.5 8.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z" /><path d="M2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4H2zm.5 4a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z" /></svg>
                Chụp ảnh
            </button>
            <button type="submit" class="btn btn-primary">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cloud-arrow-up-fill" viewBox="0 0 16 16"><path d="M8 2a5.53 5.53 0 0 0-3.594 1.342c-.766.66-1.321 1.52-1.464 2.383C1.266 6.095 0 7.555 0 9.318 0 11.366 1.708 13 3.781 13h8.906C14.502 13 16 11.57 16 9.773c0-1.636-1.242-2.969-2.834-3.194C12.923 3.999 10.69 2 8 2zm2.354 5.146a.5.5 0 0 1-.708.708L8.5 6.707V10.5a.5.5 0 0 1-1 0V6.707L6.354 7.854a.5.5 0 1 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2z" /></svg>
                Upload
            </button>
        </div>

        <div id="imageInputs">
        </div>

        <div id="cameraContainer" style="display:none;">
            <video id="camera" width="400" autoplay></video>
            <canvas id="canvas" style="display:none;"></canvas>
            <div class="camera-controls">
                <button type="button" class="btn btn-success" onclick="takePhoto()">Chụp</button>
                <button type="button" class="btn btn-secondary" onclick="closeCamera()">Đóng</button>
            </div>
        </div>

    </form>
</div>

@if (ViewBag.Message != null)
{
    <div class="upload-container">
        <h4>@ViewBag.Message</h4>
        @if (ViewBag.Urls != null)
        {
            <ul class="result-list">
                @foreach (var url in (List<string>)ViewBag.Urls)
                {
                    <li>
                        <img src="@url" style="cursor:pointer;" onclick="openPopup('@url')" alt="Uploaded Image" />
                    </li>
                }
            </ul>
        }
    </div>
}

<div id="imgPopup" class="popup" onclick="closePopup()">
    <span class="close">&times;</span>
    <img class="popup-content" id="popupImage" />
</div>


<script>
    let index = 0;
    let stream;

   
    document.addEventListener("DOMContentLoaded", function() {
        addMore();
    });

    function createNewImageItem(idx) {
        const div = document.createElement("div");
        div.classList.add("image-item");
        div.setAttribute('data-index', idx);

        div.innerHTML = `
            <button type="button" class="btn-remove" onclick="removeItem(this)">&times;</button>
            <div class="image-preview-container" onclick="triggerFileInput(this)">
                <div class="preview-placeholder">
                     <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16"><path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/><path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/></svg>
                    <div>Nhấn để chọn ảnh</div>
                </div>
                <img id="preview-${idx}" class="image-preview" onclick="openPopup(this.src)" />
            </div>
            <input type="file" name="items[${idx}].File" onchange="previewImage(this, ${idx})" accept="image/*" style="display:none;" />
            <input type="text" name="items[${idx}].NoiDung" placeholder="Nhập nội dung cho ảnh" class="form-input" />
        `;
        return div;
    }

    function addMore() {
        const container = document.getElementById("imageInputs");
        const newItem = createNewImageItem(index);
        container.appendChild(newItem);
        index++;
    }

    function triggerFileInput(container) {
        // Tìm input file tương ứng bên trong image-item và kích hoạt nó
        container.closest('.image-item').querySelector('input[type=file]').click();
    }

    function previewImage(input, idx) {
        const file = input.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const item = input.closest('.image-item');
                const imgPreview = item.querySelector(`#preview-${idx}`);
                const placeholder = item.querySelector('.preview-placeholder');

                imgPreview.src = e.target.result;
                imgPreview.style.display = 'block';
                placeholder.style.display = 'none'; // Ẩn placeholder đi
            };
            reader.readAsDataURL(file);
        }
    }

    function removeItem(button) {
        // Tìm đến thẻ cha .image-item và xóa nó
        button.closest('.image-item').remove();
    }

    function openPopup(src) {
        if (!src || src.endsWith('/')) return; // Không mở popup nếu không có ảnh
        event.stopPropagation(); // Ngăn sự kiện click vào container
        document.getElementById("popupImage").src = src;
        document.getElementById("imgPopup").style.display = "block";
    }

    function closePopup() {
        document.getElementById("imgPopup").style.display = "none";
    }

    async function openCamera() {
        try {
            document.getElementById("cameraContainer").style.display = "block";
            stream = await navigator.mediaDevices.getUserMedia({ video: true });
            document.getElementById("camera").srcObject = stream;
        } catch(err) {
            console.error("Lỗi truy cập camera: ", err);
            alert("Không thể truy cập camera. Vui lòng cấp quyền cho trang web.");
            closeCamera();
        }
    }

    function closeCamera() {
        document.getElementById("cameraContainer").style.display = "none";
        if (stream) {
            stream.getTracks().forEach(track => track.stop());
        }
    }

        function takePhoto() {
        const video = document.getElementById("camera");
        const canvas = document.getElementById("canvas");
        const ctx = canvas.getContext("2d");
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

        canvas.toBlob(blob => {
            const file = new File([blob], `captured_${Date.now()}.png`, { type: "image/png" });

            const container = document.getElementById("imageInputs");
            const newItem = createNewImageItem(index);
            container.appendChild(newItem);

 
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            const fileInput = newItem.querySelector(`input[type=file]`);
            fileInput.files = dataTransfer.files;

            const currentIndex = index;
            previewImage(fileInput, currentIndex);

            index++; 
        }, "image/png");

        closeCamera();
    }

</script>